package com.jay.lang;

// Generated from J.g4 by ANTLR 4.7.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class JLexer extends Lexer {
    static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

    protected static final DFA[] _decisionToDFA;
    protected static final PredictionContextCache _sharedContextCache =
        new PredictionContextCache();
    public static final int
        T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
        T__9=10, T__10=11, AND=12, OR=13, BEGIN=14, END=15, PROGRAM=16, FUNCTION=17, 
        AS=18, RETURN=19, BREAK=20, CONTINUE=21, TO=22, NOT=23, IF=24, ELSE=25, 
        WHILE=26, FOR=27, STEP=28, THEN=29, GLOBAL=30, VAR=31, TRUE=32, FALSE=33, 
        TYPEOF=34, DYNAMIC=35, IMPORT=36, NATIVE=37, CONST_TYPE=38, TYPE=39, COMPARE_OP=40, 
        CONST_INT=41, CONST_NATUAL_NO=42, CONST_FLOAT=43, CONST_STRING=44, CONST_NORMAL_STRING=45, 
        CONST_CHAR_STRING=46, POSITIVE_DIGIT=47, DIGIT=48, ID=49, COMMENT=50, 
        LINE_COMMENT=51, WS=52;
    public static String[] channelNames = {
        "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    };

    public static String[] modeNames = {
        "DEFAULT_MODE"
    };

    public static final String[] ruleNames = {
        "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
        "T__9", "T__10", "AND", "OR", "BEGIN", "END", "PROGRAM", "FUNCTION", "AS", 
        "RETURN", "BREAK", "CONTINUE", "TO", "NOT", "IF", "ELSE", "WHILE", "FOR", 
        "STEP", "THEN", "GLOBAL", "VAR", "TRUE", "FALSE", "TYPEOF", "DYNAMIC", 
        "IMPORT", "NATIVE", "CONST_TYPE", "TYPE", "COMPARE_OP", "CONST_INT", "CONST_NATUAL_NO", 
        "CONST_FLOAT", "CONST_STRING", "CONST_NORMAL_STRING", "CONST_CHAR_STRING", 
        "ESCAPE_CHAR", "POSITIVE_DIGIT", "DIGIT", "ID", "COMMENT", "LINE_COMMENT", 
        "WS"
    };

    private static final String[] _LITERAL_NAMES = {
        null, "'('", "')'", "'['", "']'", "'='", "'+'", "'-'", "'*'", "'/'", "','", 
        "'[]'", null, null, "'begin'", "'end'", "'program'", "'function'", "'as'", 
        "'return'", "'break'", "'continue'", "'to'", null, "'if'", "'else'", "'while'", 
        "'for'", "'step'", "'then'", "'global'", "'var'", "'true'", "'false'", 
        "'typeof'", "'dynamic'", "'import'", "'native'"
    };
    private static final String[] _SYMBOLIC_NAMES = {
        null, null, null, null, null, null, null, null, null, null, null, null, 
        "AND", "OR", "BEGIN", "END", "PROGRAM", "FUNCTION", "AS", "RETURN", "BREAK", 
        "CONTINUE", "TO", "NOT", "IF", "ELSE", "WHILE", "FOR", "STEP", "THEN", 
        "GLOBAL", "VAR", "TRUE", "FALSE", "TYPEOF", "DYNAMIC", "IMPORT", "NATIVE", 
        "CONST_TYPE", "TYPE", "COMPARE_OP", "CONST_INT", "CONST_NATUAL_NO", "CONST_FLOAT", 
        "CONST_STRING", "CONST_NORMAL_STRING", "CONST_CHAR_STRING", "POSITIVE_DIGIT", 
        "DIGIT", "ID", "COMMENT", "LINE_COMMENT", "WS"
    };
    public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

    /**
     * @deprecated Use {@link #VOCABULARY} instead.
     */
    @Deprecated
    public static final String[] tokenNames;
    static {
        tokenNames = new String[_SYMBOLIC_NAMES.length];
        for (int i = 0; i < tokenNames.length; i++) {
            tokenNames[i] = VOCABULARY.getLiteralName(i);
            if (tokenNames[i] == null) {
                tokenNames[i] = VOCABULARY.getSymbolicName(i);
            }

            if (tokenNames[i] == null) {
                tokenNames[i] = "<INVALID>";
            }
        }
    }

    @Override
    @Deprecated
    public String[] getTokenNames() {
        return tokenNames;
    }

    @Override

    public Vocabulary getVocabulary() {
        return VOCABULARY;
    }


    public JLexer(CharStream input) {
        super(input);
        _interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
    }

    @Override
    public String getGrammarFileName() { return "J.g4"; }

    @Override
    public String[] getRuleNames() { return ruleNames; }

    @Override
    public String getSerializedATN() { return _serializedATN; }

    @Override
    public String[] getChannelNames() { return channelNames; }

    @Override
    public String[] getModeNames() { return modeNames; }

    @Override
    public ATN getATN() { return _ATN; }

    public static final String _serializedATN =
        "\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\66\u01bf\b\1\4\2"+
        "\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
        "\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
        "\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
        "\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
        " \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
        "+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
        "\t\64\4\65\t\65\4\66\t\66\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3\6\3\6\3\7"+
        "\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r"+
        "\5\r\u008a\n\r\3\16\3\16\3\16\3\16\5\16\u0090\n\16\3\17\3\17\3\17\3\17"+
        "\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21"+
        "\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\24\3\24"+
        "\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26"+
        "\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\30\5\30"+
        "\u00cd\n\30\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33"+
        "\3\33\3\33\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36"+
        "\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3!\3!\3!\3!"+
        "\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$"+
        "\3$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'"+
        "\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3"+
        "\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\5\'\u013e\n\'\3(\3(\3(\3(\3)\3)\3)"+
        "\3)\3)\3)\3)\3)\3)\3)\5)\u014e\n)\3*\5*\u0151\n*\3*\3*\3+\3+\3+\7+\u0158"+
        "\n+\f+\16+\u015b\13+\5+\u015d\n+\3,\3,\3,\6,\u0162\n,\r,\16,\u0163\3,"+
        "\3,\6,\u0168\n,\r,\16,\u0169\5,\u016c\n,\3-\3-\5-\u0170\n-\3.\3.\3.\7"+
        ".\u0175\n.\f.\16.\u0178\13.\3.\3.\3/\3/\3/\7/\u017f\n/\f/\16/\u0182\13"+
        "/\3/\3/\3\60\3\60\3\60\3\60\5\60\u018a\n\60\3\60\5\60\u018d\n\60\3\61"+
        "\3\61\3\62\3\62\5\62\u0193\n\62\3\63\3\63\7\63\u0197\n\63\f\63\16\63\u019a"+
        "\13\63\3\64\3\64\3\64\3\64\7\64\u01a0\n\64\f\64\16\64\u01a3\13\64\3\64"+
        "\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\65\5\65\u01af\n\65\3\65\7\65"+
        "\u01b2\n\65\f\65\16\65\u01b5\13\65\3\65\3\65\3\66\6\66\u01ba\n\66\r\66"+
        "\16\66\u01bb\3\66\3\66\3\u01a1\2\67\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n"+
        "\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
        "/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.["+
        "/]\60_\2a\61c\62e\63g\64i\65k\66\3\2\n\4\2$$^^\4\2))^^\b\2$$))^^ppttv"+
        "v\3\2\63;\6\2&&C\\aac|\7\2&&\62;C\\aac|\4\2\f\f\17\17\5\2\13\f\16\17\""+
        "\"\2\u01df\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2"+
        "\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27"+
        "\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2"+
        "\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2"+
        "\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2"+
        "\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2"+
        "\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S"+
        "\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2a\3\2"+
        "\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\3m\3\2\2\2"+
        "\5o\3\2\2\2\7q\3\2\2\2\ts\3\2\2\2\13u\3\2\2\2\rw\3\2\2\2\17y\3\2\2\2\21"+
        "{\3\2\2\2\23}\3\2\2\2\25\177\3\2\2\2\27\u0081\3\2\2\2\31\u0089\3\2\2\2"+
        "\33\u008f\3\2\2\2\35\u0091\3\2\2\2\37\u0097\3\2\2\2!\u009b\3\2\2\2#\u00a3"+
        "\3\2\2\2%\u00ac\3\2\2\2\'\u00af\3\2\2\2)\u00b6\3\2\2\2+\u00bc\3\2\2\2"+
        "-\u00c5\3\2\2\2/\u00cc\3\2\2\2\61\u00ce\3\2\2\2\63\u00d1\3\2\2\2\65\u00d6"+
        "\3\2\2\2\67\u00dc\3\2\2\29\u00e0\3\2\2\2;\u00e5\3\2\2\2=\u00ea\3\2\2\2"+
        "?\u00f1\3\2\2\2A\u00f5\3\2\2\2C\u00fa\3\2\2\2E\u0100\3\2\2\2G\u0107\3"+
        "\2\2\2I\u010f\3\2\2\2K\u0116\3\2\2\2M\u013d\3\2\2\2O\u013f\3\2\2\2Q\u014d"+
        "\3\2\2\2S\u0150\3\2\2\2U\u015c\3\2\2\2W\u016b\3\2\2\2Y\u016f\3\2\2\2["+
        "\u0171\3\2\2\2]\u017b\3\2\2\2_\u018c\3\2\2\2a\u018e\3\2\2\2c\u0192\3\2"+
        "\2\2e\u0194\3\2\2\2g\u019b\3\2\2\2i\u01ae\3\2\2\2k\u01b9\3\2\2\2mn\7*"+
        "\2\2n\4\3\2\2\2op\7+\2\2p\6\3\2\2\2qr\7]\2\2r\b\3\2\2\2st\7_\2\2t\n\3"+
        "\2\2\2uv\7?\2\2v\f\3\2\2\2wx\7-\2\2x\16\3\2\2\2yz\7/\2\2z\20\3\2\2\2{"+
        "|\7,\2\2|\22\3\2\2\2}~\7\61\2\2~\24\3\2\2\2\177\u0080\7.\2\2\u0080\26"+
        "\3\2\2\2\u0081\u0082\7]\2\2\u0082\u0083\7_\2\2\u0083\30\3\2\2\2\u0084"+
        "\u0085\7c\2\2\u0085\u0086\7p\2\2\u0086\u008a\7f\2\2\u0087\u0088\7(\2\2"+
        "\u0088\u008a\7(\2\2\u0089\u0084\3\2\2\2\u0089\u0087\3\2\2\2\u008a\32\3"+
        "\2\2\2\u008b\u008c\7q\2\2\u008c\u0090\7t\2\2\u008d\u008e\7~\2\2\u008e"+
        "\u0090\7~\2\2\u008f\u008b\3\2\2\2\u008f\u008d\3\2\2\2\u0090\34\3\2\2\2"+
        "\u0091\u0092\7d\2\2\u0092\u0093\7g\2\2\u0093\u0094\7i\2\2\u0094\u0095"+
        "\7k\2\2\u0095\u0096\7p\2\2\u0096\36\3\2\2\2\u0097\u0098\7g\2\2\u0098\u0099"+
        "\7p\2\2\u0099\u009a\7f\2\2\u009a \3\2\2\2\u009b\u009c\7r\2\2\u009c\u009d"+
        "\7t\2\2\u009d\u009e\7q\2\2\u009e\u009f\7i\2\2\u009f\u00a0\7t\2\2\u00a0"+
        "\u00a1\7c\2\2\u00a1\u00a2\7o\2\2\u00a2\"\3\2\2\2\u00a3\u00a4\7h\2\2\u00a4"+
        "\u00a5\7w\2\2\u00a5\u00a6\7p\2\2\u00a6\u00a7\7e\2\2\u00a7\u00a8\7v\2\2"+
        "\u00a8\u00a9\7k\2\2\u00a9\u00aa\7q\2\2\u00aa\u00ab\7p\2\2\u00ab$\3\2\2"+
        "\2\u00ac\u00ad\7c\2\2\u00ad\u00ae\7u\2\2\u00ae&\3\2\2\2\u00af\u00b0\7"+
        "t\2\2\u00b0\u00b1\7g\2\2\u00b1\u00b2\7v\2\2\u00b2\u00b3\7w\2\2\u00b3\u00b4"+
        "\7t\2\2\u00b4\u00b5\7p\2\2\u00b5(\3\2\2\2\u00b6\u00b7\7d\2\2\u00b7\u00b8"+
        "\7t\2\2\u00b8\u00b9\7g\2\2\u00b9\u00ba\7c\2\2\u00ba\u00bb\7m\2\2\u00bb"+
        "*\3\2\2\2\u00bc\u00bd\7e\2\2\u00bd\u00be\7q\2\2\u00be\u00bf\7p\2\2\u00bf"+
        "\u00c0\7v\2\2\u00c0\u00c1\7k\2\2\u00c1\u00c2\7p\2\2\u00c2\u00c3\7w\2\2"+
        "\u00c3\u00c4\7g\2\2\u00c4,\3\2\2\2\u00c5\u00c6\7v\2\2\u00c6\u00c7\7q\2"+
        "\2\u00c7.\3\2\2\2\u00c8\u00c9\7p\2\2\u00c9\u00ca\7q\2\2\u00ca\u00cd\7"+
        "v\2\2\u00cb\u00cd\7#\2\2\u00cc\u00c8\3\2\2\2\u00cc\u00cb\3\2\2\2\u00cd"+
        "\60\3\2\2\2\u00ce\u00cf\7k\2\2\u00cf\u00d0\7h\2\2\u00d0\62\3\2\2\2\u00d1"+
        "\u00d2\7g\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4\7u\2\2\u00d4\u00d5\7g\2\2"+
        "\u00d5\64\3\2\2\2\u00d6\u00d7\7y\2\2\u00d7\u00d8\7j\2\2\u00d8\u00d9\7"+
        "k\2\2\u00d9\u00da\7n\2\2\u00da\u00db\7g\2\2\u00db\66\3\2\2\2\u00dc\u00dd"+
        "\7h\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7t\2\2\u00df8\3\2\2\2\u00e0\u00e1"+
        "\7u\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3\7g\2\2\u00e3\u00e4\7r\2\2\u00e4"+
        ":\3\2\2\2\u00e5\u00e6\7v\2\2\u00e6\u00e7\7j\2\2\u00e7\u00e8\7g\2\2\u00e8"+
        "\u00e9\7p\2\2\u00e9<\3\2\2\2\u00ea\u00eb\7i\2\2\u00eb\u00ec\7n\2\2\u00ec"+
        "\u00ed\7q\2\2\u00ed\u00ee\7d\2\2\u00ee\u00ef\7c\2\2\u00ef\u00f0\7n\2\2"+
        "\u00f0>\3\2\2\2\u00f1\u00f2\7x\2\2\u00f2\u00f3\7c\2\2\u00f3\u00f4\7t\2"+
        "\2\u00f4@\3\2\2\2\u00f5\u00f6\7v\2\2\u00f6\u00f7\7t\2\2\u00f7\u00f8\7"+
        "w\2\2\u00f8\u00f9\7g\2\2\u00f9B\3\2\2\2\u00fa\u00fb\7h\2\2\u00fb\u00fc"+
        "\7c\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe\7u\2\2\u00fe\u00ff\7g\2\2\u00ff"+
        "D\3\2\2\2\u0100\u0101\7v\2\2\u0101\u0102\7{\2\2\u0102\u0103\7r\2\2\u0103"+
        "\u0104\7g\2\2\u0104\u0105\7q\2\2\u0105\u0106\7h\2\2\u0106F\3\2\2\2\u0107"+
        "\u0108\7f\2\2\u0108\u0109\7{\2\2\u0109\u010a\7p\2\2\u010a\u010b\7c\2\2"+
        "\u010b\u010c\7o\2\2\u010c\u010d\7k\2\2\u010d\u010e\7e\2\2\u010eH\3\2\2"+
        "\2\u010f\u0110\7k\2\2\u0110\u0111\7o\2\2\u0111\u0112\7r\2\2\u0112\u0113"+
        "\7q\2\2\u0113\u0114\7t\2\2\u0114\u0115\7v\2\2\u0115J\3\2\2\2\u0116\u0117"+
        "\7p\2\2\u0117\u0118\7c\2\2\u0118\u0119\7v\2\2\u0119\u011a\7k\2\2\u011a"+
        "\u011b\7x\2\2\u011b\u011c\7g\2\2\u011cL\3\2\2\2\u011d\u011e\7c\2\2\u011e"+
        "\u011f\7t\2\2\u011f\u0120\7t\2\2\u0120\u0121\7c\2\2\u0121\u013e\7{\2\2"+
        "\u0122\u0123\7d\2\2\u0123\u0124\7q\2\2\u0124\u0125\7q\2\2\u0125\u013e"+
        "\7n\2\2\u0126\u0127\7k\2\2\u0127\u0128\7p\2\2\u0128\u013e\7v\2\2\u0129"+
        "\u012a\7p\2\2\u012a\u012b\7k\2\2\u012b\u013e\7n\2\2\u012c\u012d\7q\2\2"+
        "\u012d\u012e\7d\2\2\u012e\u012f\7l\2\2\u012f\u0130\7g\2\2\u0130\u0131"+
        "\7e\2\2\u0131\u013e\7v\2\2\u0132\u0133\7h\2\2\u0133\u0134\7n\2\2\u0134"+
        "\u0135\7q\2\2\u0135\u0136\7c\2\2\u0136\u013e\7v\2\2\u0137\u0138\7u\2\2"+
        "\u0138\u0139\7v\2\2\u0139\u013a\7t\2\2\u013a\u013b\7k\2\2\u013b\u013c"+
        "\7p\2\2\u013c\u013e\7i\2\2\u013d\u011d\3\2\2\2\u013d\u0122\3\2\2\2\u013d"+
        "\u0126\3\2\2\2\u013d\u0129\3\2\2\2\u013d\u012c\3\2\2\2\u013d\u0132\3\2"+
        "\2\2\u013d\u0137\3\2\2\2\u013eN\3\2\2\2\u013f\u0140\7>\2\2\u0140\u0141"+
        "\5M\'\2\u0141\u0142\7@\2\2\u0142P\3\2\2\2\u0143\u014e\7>\2\2\u0144\u0145"+
        "\7>\2\2\u0145\u014e\7?\2\2\u0146\u014e\7@\2\2\u0147\u0148\7@\2\2\u0148"+
        "\u014e\7?\2\2\u0149\u014a\7?\2\2\u014a\u014e\7?\2\2\u014b\u014c\7#\2\2"+
        "\u014c\u014e\7?\2\2\u014d\u0143\3\2\2\2\u014d\u0144\3\2\2\2\u014d\u0146"+
        "\3\2\2\2\u014d\u0147\3\2\2\2\u014d\u0149\3\2\2\2\u014d\u014b\3\2\2\2\u014e"+
        "R\3\2\2\2\u014f\u0151\7/\2\2\u0150\u014f\3\2\2\2\u0150\u0151\3\2\2\2\u0151"+
        "\u0152\3\2\2\2\u0152\u0153\5U+\2\u0153T\3\2\2\2\u0154\u015d\7\62\2\2\u0155"+
        "\u0159\5a\61\2\u0156\u0158\5c\62\2\u0157\u0156\3\2\2\2\u0158\u015b\3\2"+
        "\2\2\u0159\u0157\3\2\2\2\u0159\u015a\3\2\2\2\u015a\u015d\3\2\2\2\u015b"+
        "\u0159\3\2\2\2\u015c\u0154\3\2\2\2\u015c\u0155\3\2\2\2\u015dV\3\2\2\2"+
        "\u015e\u015f\5S*\2\u015f\u0161\7\60\2\2\u0160\u0162\5c\62\2\u0161\u0160"+
        "\3\2\2\2\u0162\u0163\3\2\2\2\u0163\u0161\3\2\2\2\u0163\u0164\3\2\2\2\u0164"+
        "\u016c\3\2\2\2\u0165\u0167\7\60\2\2\u0166\u0168\5c\62\2\u0167\u0166\3"+
        "\2\2\2\u0168\u0169\3\2\2\2\u0169\u0167\3\2\2\2\u0169\u016a\3\2\2\2\u016a"+
        "\u016c\3\2\2\2\u016b\u015e\3\2\2\2\u016b\u0165\3\2\2\2\u016cX\3\2\2\2"+
        "\u016d\u0170\5[.\2\u016e\u0170\5]/\2\u016f\u016d\3\2\2\2\u016f\u016e\3"+
        "\2\2\2\u0170Z\3\2\2\2\u0171\u0176\7$\2\2\u0172\u0175\5_\60\2\u0173\u0175"+
        "\n\2\2\2\u0174\u0172\3\2\2\2\u0174\u0173\3\2\2\2\u0175\u0178\3\2\2\2\u0176"+
        "\u0174\3\2\2\2\u0176\u0177\3\2\2\2\u0177\u0179\3\2\2\2\u0178\u0176\3\2"+
        "\2\2\u0179\u017a\7$\2\2\u017a\\\3\2\2\2\u017b\u0180\7)\2\2\u017c\u017f"+
        "\5_\60\2\u017d\u017f\n\3\2\2\u017e\u017c\3\2\2\2\u017e\u017d\3\2\2\2\u017f"+
        "\u0182\3\2\2\2\u0180\u017e\3\2\2\2\u0180\u0181\3\2\2\2\u0181\u0183\3\2"+
        "\2\2\u0182\u0180\3\2\2\2\u0183\u0184\7)\2\2\u0184^\3\2\2\2\u0185\u0186"+
        "\7^\2\2\u0186\u018d\t\4\2\2\u0187\u0189\7^\2\2\u0188\u018a\7\17\2\2\u0189"+
        "\u0188\3\2\2\2\u0189\u018a\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u018d\7\f"+
        "\2\2\u018c\u0185\3\2\2\2\u018c\u0187\3\2\2\2\u018d`\3\2\2\2\u018e\u018f"+
        "\t\5\2\2\u018fb\3\2\2\2\u0190\u0193\5a\61\2\u0191\u0193\7\62\2\2\u0192"+
        "\u0190\3\2\2\2\u0192\u0191\3\2\2\2\u0193d\3\2\2\2\u0194\u0198\t\6\2\2"+
        "\u0195\u0197\t\7\2\2\u0196\u0195\3\2\2\2\u0197\u019a\3\2\2\2\u0198\u0196"+
        "\3\2\2\2\u0198\u0199\3\2\2\2\u0199f\3\2\2\2\u019a\u0198\3\2\2\2\u019b"+
        "\u019c\7\61\2\2\u019c\u019d\7,\2\2\u019d\u01a1\3\2\2\2\u019e\u01a0\13"+
        "\2\2\2\u019f\u019e\3\2\2\2\u01a0\u01a3\3\2\2\2\u01a1\u01a2\3\2\2\2\u01a1"+
        "\u019f\3\2\2\2\u01a2\u01a4\3\2\2\2\u01a3\u01a1\3\2\2\2\u01a4\u01a5\7,"+
        "\2\2\u01a5\u01a6\7\61\2\2\u01a6\u01a7\3\2\2\2\u01a7\u01a8\b\64\2\2\u01a8"+
        "h\3\2\2\2\u01a9\u01aa\7\61\2\2\u01aa\u01af\7\61\2\2\u01ab\u01af\7%\2\2"+
        "\u01ac\u01ad\7/\2\2\u01ad\u01af\7/\2\2\u01ae\u01a9\3\2\2\2\u01ae\u01ab"+
        "\3\2\2\2\u01ae\u01ac\3\2\2\2\u01af\u01b3\3\2\2\2\u01b0\u01b2\n\b\2\2\u01b1"+
        "\u01b0\3\2\2\2\u01b2\u01b5\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b3\u01b4\3\2"+
        "\2\2\u01b4\u01b6\3\2\2\2\u01b5\u01b3\3\2\2\2\u01b6\u01b7\b\65\2\2\u01b7"+
        "j\3\2\2\2\u01b8\u01ba\t\t\2\2\u01b9\u01b8\3\2\2\2\u01ba\u01bb\3\2\2\2"+
        "\u01bb\u01b9\3\2\2\2\u01bb\u01bc\3\2\2\2\u01bc\u01bd\3\2\2\2\u01bd\u01be"+
        "\b\66\3\2\u01bel\3\2\2\2\33\2\u0089\u008f\u00cc\u013d\u014d\u0150\u0159"+
        "\u015c\u0163\u0169\u016b\u016f\u0174\u0176\u017e\u0180\u0189\u018c\u0192"+
        "\u0198\u01a1\u01ae\u01b3\u01bb\4\b\2\2\2\3\2";
    public static final ATN _ATN =
        new ATNDeserializer().deserialize(_serializedATN.toCharArray());
    static {
        _decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
        for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
            _decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
        }
    }
}